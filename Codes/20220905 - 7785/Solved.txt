이번 시간부터 해시에 대해 배웠다.
해시...최근에는 보안 쪽에서 배웠던 것 같다.
그쪽에서는 워낙 중요하게 보는 기술이니까.

이번 문제는 해시가 어떻게 문제로 나올 수 있을까? 정도를 물어본 느낌이다.

문제는 간단하다. 회사 직원들이 출퇴근한 로그가 있는데, 그 로그를 보고 회사에 남아있는 사람들을 구하는 문제이다.

어떤 자료구조를 쓰든 상관없겠지만, barkingDog님은 "중복을 허용하지 않는 자료구조"를 사용하면 쉽게 문제를 풀 수 있다고 설명했었다. 좀 더 복잡했겠지만, 나는 제일 먼저 python의 dictionary같은 걸 생각했었다. key값과 value값을 가지고 있으니까, key값으로 사람 이름을 호출하면 그 value값으로 사람이 있는지 없는지를 체크할 수 있을 테니까. 그런데 그것도 지금 생각해보면 사람이 거의 한번도 중복되지 않고 계속 나오면 곤란할 수도 있겠다는 생각이 든다.

이렇게 자료구조의 특수성을 빌리지 않고 해결하는 방법도 있는데, 바로 이진 탐색이다.
이전에 풀었던 10816번 문제의 해결 방법과 원리가 비슷하다. 로그를 enter / leave로 나눠서 이름 순으로 정렬하고(아예 둘로 나누든, enter 먼저 leave 나중으로 한 배열에 정렬하든 상관없다), 각 영역에 그 사람의 이름이 몇 번 나왔는지를 계산한다. 그럼 enter쪽에서도, leave쪽에서도 사람들의 이름이 계산될 것이고...그 계산한 결과를 가지고 enter가 값이 더 크면 이름을 출력하고, leave가 더 많으면 그 이름은 출력 대상에서 제외하는 방식이다.

다만 이전에 했던 10816번 문제보다 방식이 훨씬 복잡한 관계로, 이 방법을 추천하지는 않는다. 설명만 봐도 너무 복잡하니까.



<코드 설명>
sety라는 변수가 위에서 말했던 중복이 안 되는 자료구조이다. 이 자료구조에 데이터를 잘 담아주는 게 이번 문제의 핵심이라고 볼 수 있다. ---- 1

이후로는 입력을 받으면서 입력에 따라 처리를 해 준다.
이름 enter가 들어오면 그 이름을 sety에 넣고, 아니라면 빼 준다.
여러번 넣어도 중복을 허락하지 않는 자료구조이니 상관없고,
여러 번 삭제해도 없으니까 아무 일도 일어나지 않는다.

그냥 그렇게 짜고 제출하면 되는데,문제에서는 역순 정렬도 요구하고 있다.
그래서 만들어진 변수가 sortedSety이다. ---- 2
여기에 sety를 정렬한 결과물을 담고, for문으로 출력하면 끗!


<주의사항>
1. sety의 타입인 Set은 C++에 있는 unordered_map과 거의 같은 기능을 수행한다고 생각하면 된다. 다만 내 코드에서는 mutableSetOf라는 말이 적혀있는데, 그건 kotlin에서 그냥 set이란 수정이 불가능한 자료구조를 의미하기 때문이다. 참고로 SortedSet이라는 자료구조도 있다. 이 친구는 정렬이 되는 Set.


2. kotlin에서는 다양한 자료구조들도 정렬해주는 sort() 함수를 지원한다. 다만 이전의 IntArray같은 거랑은 다르게 Set이라서 그냥 sort는 안 되고 sorted로 정렬된 결과물만 받을 수 있다. 그래서 정렬한 결과물을 저장할 다른 배열이 필요하다.
또한 정렬하고 나면 List형이 되어버린다. 이번 문제에서야 출력하면 되니까 굳이 다른 자료구조로 변환할 필요가 없지만, 여전히 set의 기능을 유지해야 한다면 sorted()로 정렬한 다음 toMutableSet같은 방식으로 변경해 줄 필요가 있다.

역순으로 정렬하고 싶다면 sort()에 인자를 주거나 하는 게 아니라 sortDescending()을 사용하면 된다.



