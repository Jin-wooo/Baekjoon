<BarkingDog님의 알고리즘 강의로 풀게 된 문제>
https://www.acmicpc.net/problem/1620

문제 설명이 엄청 길고 장황하지만, 결국 원하는 것은 짝을 짓는 것이다.
포켓몬 도감의 목록이 주어지면, 그 목록을 저장해서 이름이 나오면 포켓몬의 번호를, 번호가 나오면 포켓몬의 이름을 출력하면 된다.

이건 자료구조 하나를 저장해서 될 일은 아니다. 번호로 이름을 부를 수 있는 변수와 이름을 넣으면 번호를 부를 수 있는 변수. 두 개의 변수를 통해 해결하는 편이 좋다. 전자는 구현이 쉽다. 우리가 늘 쓰는 배열이 바로 그런 거니까. 그럼 후자는 어떻게 만들면 좋을까? 여기서 우리가 알던 key-value 구조를 가진 자료구조를 사용하면 된다. 

그걸 사용해서 데이터를 양쪽에 저장하고, 도감 이후에 나오는 문제에 따라 출력해주면 된다.


이번 문제에서는 내가 지금까지는 쓰지 않았던 다양한 자료구조와 함수들을 써보는 좋은 기회였다.

우선 매번 쓰던 IntArray가 아니라 다른 자료구조를 써봤다는 거.
String은 Array(size) {""} 정도로 초기화하는 게 제일 좋은 것 같다. IntArray() 처럼 쉽고 빠른 초기화는 잘 안되는 것 같다. IntArray마냥 StringArray가 있는 것도 아니였고.
 
그리고 arrayOf, hashMapOf, HashMap<>()의 차이점을 좀 생각해보게 된다.
Array는 Array<String>()같은 식이 세워지질 않는다. 그냥 사이즈만 줘서 초기화할 수가 없어서 뭔가를 덧붙여야 하더라.
그리고 of가 붙은 것과 안 붙은 것의 차이점은 초기값을 직접 지정해주느냐 아니냐의 차이. 나는 보통 초기값을 주지 않는 편이라서 주로 of가 없는 버전을 사용한다.

마지막으로 isDigit. 이건 String이 아니라 char 타입을 위한 함수였다. 그 글자가 숫자인지 아닌지를 판별해주는 함수인데, 아마 Digit 판별이 된다면 isAlpha같은 것도 있을 것 같다. 이걸 통해서 주어진 문제가 포켓몬 도감의 숫자인지 이름인지를 판별해서 풀었었다.


<코드 설명>
입력을 받고, 이후 for문으로 포켓몬 도감을 받는다. ---- 1
for문으로 입력을 받으면 배열의 i위치에 포켓몬 이름을 넣고, 포켓몬 이름은 i와 함께 key, value값으로 써서 hashMap에 저장한다.

이후 문제가 나오면 그 문제가 숫자인지 글자인지를 isDigit으로 판별한다. char용 함수니까 문제의 맨 앞글자를 판별에 사용했다.

그리고 그에 따라 출력을 해 주면 끗.




<주의사항>
1. repeat로 it를 쓰는 방식이 아니라 for문을 쓰는 이유는, 포켓몬 도감이 0-indexed가 아니라 1-indexed 방식이기 때문이다. repeat로는 이게 안되니까.