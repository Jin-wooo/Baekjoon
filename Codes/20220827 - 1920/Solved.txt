<BarkingDog님의 알고리즘 강의로 풀게 된 문제>
https://www.acmicpc.net/problem/1920

단순한 이진 탐색 문제이다.
아마 다른 빠른 탐색 방법이 있다면 그걸 써도 되겠지만, 여기서는 찾아야 하는 숫자가 많아질 예정이므로 그냥 이진 탐색으로 구현하는 편이 낫다.

이진 탐색 구현에서 가장 중요한 것은 두 가지.
언제 while문을 탈출할 것인가? 와
어떤 조건으로 범위를 줄일 것인가? 이다.

while문 탈출은 왼쪽이 오른쪽을 추월했을 때다.
그 이상 가면 탐색의 의미가 없기 때문이다.

그리고 범위를 줄이는 조건은 찾을 숫자와 (왼쪽 + 오른쪽) / 2로 만든 중앙에 해당하는 숫자 간의 크기 비교이다.
중앙 수보다 크기가 크면 그 이하를 볼 필요가 없으니 left = mid + 1.
중앙 수보다 크기가 작으면 그 이상을 볼 필요가 없으니 right = mid - 1.
+1, -1을 하는 이유는, mid값이 아니라는 게 나왔으니 그 부분을 제외하고 범위에 넣으려는 것이다.

요 두 가지만 잘 기억한다면, 구현은 정말 쉽다.



...근데 in이나 contains같은 함수를 써도 무방하다.
찾기는 하잖아.
게다가 이진 탐색으로 (Array).binarySearch(찾을 값)라는 함수도 제공한다.





<코드 설명>
사실상 위에서 다 했다고 본다.




<예제>
23
1 654 6 54 435 7 8 67 6 9 43 3 5 21 34 56 66 465 276 5435 65426 45432 576
5
63 57 1 54 7809

ans :
0
0
1
1
0