<Barking님의 알고리즘 강의로 풀게 된 문제>
https://www.acmicpc.net/problem/1074

9분만 더 빨리 풀었으면.
그러면 2일 연속 기록을 오랜만에 찍어볼 수 있었을 텐데...
아쉽지만, 오늘은 거의 1시간 20분 안에 아무런 답지와 질문 검색 없이
오로지 내 머리와 테스트 케이스만을 가지고 열심히 문제를 풀었다.
와! 신난다!
실력을 더 키우면 요정도 갬성으로 쭉 갈수있겠지?


문제를 정리해보자면...
2차원 배열을 Z자로 탐색하는데, 
이 때 규모, 행, 열이 주어지면 그 행과 열을 몇 번째로 방문하게 되는지를 출력하는 문제이다.
이거는 그냥 사이트 들어가서 어떤 식으로 Z자 탐색을 하는건지 직접 보는 편이 빠르다고 생각한다. 그리고 가서 보면 알겠지만 재귀를 사용해서 문제를 푼다. 딱 봐도 재귀각이 보인다.  


이 문제의 핵심은 배열을 Z자로 탐색한다는 말이 사실은 모든 배열을 4등분으로 나눠 탐색하는 방법이라는 걸 알아채는 거라고 생각한다.
시각적으로 보자면, 모든 배열은 규모가 어떻든 간에 결국
1 2
3 4
와 같은 순서로 진행되고, 이 특성을 통해 재귀함수를 짤 수 있다.


문제에서 재귀함수를 짤 때, barking님은 최솟값이라는 개념 없이 그냥 짜셨던데, 나의 경우 해당 영역의 최솟값이라는 부분을 계속 생각하면서 짰었다.
문제의 답은 최솟값(해당 영역의 가장 왼쪽 위의 값)과 주어진 위치가 어디인지를 파악하기만 하면 나온다고 생각했기 때문이다.

이런 가정을 하고 문제에 접근하면 두 가지 부분을 해결해야 하는데...
1. 최솟값을 어떻게 찾을까?
이거는 공식이 있다고 본다.
spacer = 4등분했을 때 각 등분의 개수
최솟값의 경우 앞서 말했듯이 해당 영역의 가장 왼쪽 위의 값이다.
그리고 등분이 나눠지면 행과


1. 큰 배열 하나를 지속적으로 4등분해서 위치를 추적해나가는 방법인데, 이러려면 주어진 행과 열이 계속 
예를 들어 2^3 규모 (8x8)의 배열에서 (7,2)위치의 순서를 알고싶은데,
배열을 4등분해도 (7,2)의 위치를 알 수 있어야 한다.





내가 짠 재귀함수에 대한 설명을 해볼까한다.

우선 barking님은 base condition(재귀함수가 끝나는 조건)을 0으로 달았고,
if문 4개를 통해 4분면을 구분해서 재귀함수를 돌렸었다.

내가 생각한 방법은 0이면 작동하지 않아서 base condition이 1이고,
if문 4개로 4분면을 고르는 건 뭔가...좀 맘에 안들어서 다른 방식으로 작업했다.
그래서 만든 게 divider이다. 이 변수는 해당 영역의 중앙이 어디인지를 표시하는 변수고, 이를 통해 행의 위치와 열의 위치가 어디쯤인지를 나눌 수 있게 해준다. 그리고 행과 열을 전부 divider 기준으로 파악하고 나서는 각 위치에 맞게 특정한 작업을 처리해주는 것으로 이를 대신했다.
그 특정한 작업이란, 행의 

작업 처리만 다 된다면 어차피 모든 값을 new라는 이름이 붙은 변수들에게 따로 저장하기 때문에 마지막은 return zeter()로 끝냈다. 그러니까 base condition에서 나온 값을 줄줄이 리턴해서 



1이 되면 최솟값에 0, 1, 2, 3 넷 중 하나를 더한 숫자가 답이 되므로
lv + (2 * r) + c = (최솟값) + (2 x 행) + 열
을 리턴하도록 만들었다.
저 식이 나오는 건 아래의 표를 보면 대강 알 수 있을 것이다.

	열=0 | 열=1
        -----------
행 = 0 |  0  |   1
-------------------
행 = 1 |  2  |   3
열은 자기 값을 그대로 더해주면 되고, 행의 경우 있으면 최소 2 이상이다.
그래서 행에만 x2를 추가해준 것.


이번 문제에서 한 실수
1. 집!!!!중!!!!력!!!!
쪼금만 더 잘했으면 괜찮았을지도 모른다.
집중력을 기르고 이대로만 쭉 가자!














