<BarkingDog님의 알고리즘 강의로 풀게 된 문제>
https://www.acmicpc.net/problem/2295

배열이 주어졌을 때, 세 수를 더해서 그 수가 배열 안에 존재하는 경우가 있을 수 있다. 이번 문제는 그런 경우들 중에서 가장 큰 값을 찾는 것이다.

문제는 생각보다 단순한데, 사실 처음 접하면 어떻게 풀어야 할지 감이 잘 안온다. 가장 단순무식하게 푸는 방법은...역시 삼중 for문을 통해 더할 숫자 3개를 정한 다음 for문 하나 돌려서 그 세 숫자의 합을 찾는 것이다. 이러면 시간 복잡도는 아마 O(N^4) 정도로 나올 것이다.

하지만 문제에서 N이 최대 1000이므로, 최악의 경우 이 문제는 1조번의 연산을 돌려야 할지도 모른다. 그건 끔찍한 일이다. 
그래서 다른 아이디어라면... 이걸 O(N^3 log N) 정도로 줄일 수 있는 방법도 있다. 바로 세 숫자의 합을 찾는 부분을 이진탐색으로 돌리는 것이다. 그래서 그 부분의 복잡도가 log N으로 줄어든 거지. 
여기서 또 O(N^2 log N) 정도로도 줄일 수 있다. 바로 배열의 수 중 두 개만 골라서 더한 값들을 저장한 배열을 만드는 것이다. 이걸 하면 O(N^2)가 나오고, 이걸 통해서 값을 찾는 것도 O(N^2 log N) 이상은 나오지 않는다. 획기적인 방법이기도 하고, 이 이상은 줄일 수 없기도 해서 이게 최종적으로 답을 내는 방법이다. 

아이디어를 가지고 코드를 짜 보면, 생각보다 복잡하게 나오지는 않는다.
결국 두 수를 더한 배열을 미리 만들어두는 아이디어를 제대로 생각하느냐, 그렇지 않느냐가 문제를 풀 수 있는 핵심이라고 생각한다.


<코드 설명>
아이디어가 긴 것에 비해서 코드가 복잡하지는 않다. 

가장 먼저 할 일은 두 수를 더한 배열을 만드는 것이다.
그냥 for문 두 개 돌려서 



<주의사항>
생각해보면 두 수를 더할 때 중복이 있을 수 있다.

<이번 문제에서 실수한 것>
1. 정확한 시간 복잡도를 알고 있었음에도 알고리즘을 제대로 짜지 못해서 아쉽다. O(N^2 log N)을 알았으면 for문 중첩을 좀 더 잘 짰어야 했는데...

2. 오늘 문제를 너무 성급하게 풀었던 것 같다. 
인덱스쪽에 3이라는 고정값을 박아두질 않나, 숫자 비교도 이상하게 꼬아두질 않나... 좀 더 여유롭게, 신중하게 잘 풀어봤으면 한다.
