<BarkingDog님의 알고리즘 강의로 풀게 된 문제>
https://www.acmicpc.net/problem/12865



이 문제는 0-1 knapsack이라는 문제이고, 유명한 'DP' 계열의 문제이다. DP에 강조를 쳐둔 이유는, 문제를 딱 보면 제일 먼저 그리디 알고리즘이 떠오르기 때문이다. 

문제의 내용은 이렇다. 물건들을 제한된 무게만큼만 넣을 수 있는 배낭과 각각의 무게, 가치가 지정된 물건들이 있을 때, 배낭에 넣을 수 있는 물건 가치의 최댓값을 구하는 것이 목표이다.
이렇게 문제를 그냥 보면 가치가 가장 높은 놈들을 우선적으로 긁어모은다면 쉽게 해결될 문제처럼 보인다. 하지만 이 문제의 경우 하나의 무겁고 가치가 높은 물건보다 두 개의 가볍고 가치가 낮은 물건을 가져가는 게 더 나을 때가 있다. 이래서 이 문제가 유명한 것이다. "그리디처럼 보이지만 사실 DP라서 조심해야 하는 문제"의 가장 대표적인 사례이기 때문에.

나는 작년 알고리즘 수업 때 이 문제를 보았었다. 심지어 이 문제와 반대되는 경우의 문제까지 본 적이 있다. 근데 그 때 문제를 제대로 풀지 않았던 건지, 정말이지 이 문제가 전혀 이해가 가질 않았다. 그냥 대충 DP로 풀 수 있지 않을까? 정도의 감은 있어도, 그 이상으로는 거의 전혀 나아가질 못했다. 


이걸 19일에 풀고 한숨 잔 뒤 20일에 코드를 다시 보니까, 그나마 이해가 좀 되는 것 같아서 글을 남기고 있다.

이 문제는 결론적으로 DP가 확실하고, 예전에 풀었었던 동전 문제와도 얼추 비슷한 부분이 있는 것 같다.