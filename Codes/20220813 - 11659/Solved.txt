<BarkingDog님의 알고리즘 강의로 풀게 된 문제>
https://www.acmicpc.net/problem/11659

문제가 정말 단순하다.
숫자가 N개 주어졌을 때, 주어진 범위 내 모든 숫자의 합을 구하는 문제다.

다만 생각할만한 것들은 많다.
그래서 어떻게 하면 이 숫자들을 다 더한 값을 제 시간에 내놓을까?

사실 시간 제한같은 걸 신경쓰지 않는다면 가장 쉬운 방법은
그냥 범위 내의 숫자들을 하나하나 더하는 것이다.
근데 그러면 입력도 그렇게 하나하나 받고,
더하는 것도 하나하나 받아아 하고...
그럼 O(NM(j - i))가 될거고, 일단 NM만 가지고도 대략 100억이 튀어나오기 때문에 이 방법은 거의 쓸 수 없다고 봐야 한다.

그럼 어떤 방법을 써야 하는가?
사실 간단한데,
해당 인덱스까지의 값을 다 더한 합을 저장하는 배열을 하나 더 만들고,
그걸 통해서 범위에 해당하는 만큼 계산을 해 주는 것이다.

예를 들어 문제에 제시된 예제 입력 1처럼 2 4가 나왔다는 것은
2부터 4까지의 숫자를 다 더한 합을 의미한다.
그렇다면 1~4를 다 더한 것에서 1까지 더한 합을 빼 주면 쉽게 구해진다.
다른 예로 5 52같은 숫자가 있다면
그것은 5부터 52까지의 숫자를 다 더한 값을 의미하는 거니까
1~52까지 다 더한 값에 1~4까지 다 더한 값을 빼 주면 된다.
여기서 주의할 점은 1~5를 빼 주지 않는 것이다. 

이걸 구현하려면 맨 먼저 배열을 하나 더 만들어줘야 한다. 나는 이 배열의 이름을 stepArray라고 지었다.
이 배열은 인덱스가 k일 때, k까지의 값을 다 더한 합을 저장하는 것이다.
그리고 범위가 주어지면 그에 맞게 stepArray를 통해 계산을 수행하게 된다.
문제에서 주는 대로 i j 형식으로 주어지면
stepArray[j] - stepArray[i - 1]
이런 식으로 말이다. 

이 때 주의할 점은, 다른 배열은 몰라도 이 stepArray는 반드시 1-indexed로 배열을 구성해줘야 한다. 1의 경우 i - 1 = 0이 되어야 하기 때문이다. 0-indexed라면 이 부분에서 추가적인 처리를 해줘야 해서 귀찮아진다.




<코드 설명>
오늘 코드설명은 원리 설명할 때 다 했다.
readArray가 값을 가지고 있는 배열이고
stepArray가 다 더한 값을 가진 배열,
ansArray가 정답을 기록하는 배열이라고 생각하고 보면 된다.

내가 배열의 입력을 한 번에 받으면서도 0번 인덱스를 피해서 받는 방법을 아직 몰라서 stepArray를 채우는 for문이 약간 꼬여 있다. 즉 readArray는 0-indexed이고 stepArray는 1-indexed이다. 이 부분만 참고하면 나머지는 쉽게쉽게 볼 수 있을 것이다.


